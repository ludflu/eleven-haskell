{-
   ElevenLabs API Documentation

   This is the documentation for the ElevenLabs API. You can use this API to use our service programmatically, this is done by using your xi-api-key. <br/> You can view your xi-api-key using the 'Profile' tab on https://beta.elevenlabs.io. Our API is experimental so all endpoints are subject to change.

   OpenAPI Version: 3.0.2
   ElevenLabs API Documentation API version: 1.0
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : ElevenLabsAPIDocumentation.Lens
-}

{-# LANGUAGE KindSignatures #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE RankNTypes #-}
{-# LANGUAGE RecordWildCards #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-matches -fno-warn-unused-binds -fno-warn-unused-imports #-}

module ElevenLabsAPIDocumentation.ModelLens where

import qualified Data.Aeson as A
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Data, Typeable)
import qualified Data.Map as Map
import qualified Data.Set as Set
import qualified Data.Time as TI

import Data.Text (Text)

import Prelude (($), (.),(<$>),(<*>),(=<<),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

import ElevenLabsAPIDocumentation.Model
import ElevenLabsAPIDocumentation.Core


-- * AddVoiceResponseModel

-- | 'addVoiceResponseModelVoiceId' Lens
addVoiceResponseModelVoiceIdL :: Lens_' AddVoiceResponseModel (Text)
addVoiceResponseModelVoiceIdL f AddVoiceResponseModel{..} = (\addVoiceResponseModelVoiceId -> AddVoiceResponseModel { addVoiceResponseModelVoiceId, ..} ) <$> f addVoiceResponseModelVoiceId
{-# INLINE addVoiceResponseModelVoiceIdL #-}



-- * BodyDownloadHistoryItemsV1HistoryDownloadPost

-- | 'bodyDownloadHistoryItemsV1HistoryDownloadPostHistoryItemIds' Lens
bodyDownloadHistoryItemsV1HistoryDownloadPostHistoryItemIdsL :: Lens_' BodyDownloadHistoryItemsV1HistoryDownloadPost ([Text])
bodyDownloadHistoryItemsV1HistoryDownloadPostHistoryItemIdsL f BodyDownloadHistoryItemsV1HistoryDownloadPost{..} = (\bodyDownloadHistoryItemsV1HistoryDownloadPostHistoryItemIds -> BodyDownloadHistoryItemsV1HistoryDownloadPost { bodyDownloadHistoryItemsV1HistoryDownloadPostHistoryItemIds, ..} ) <$> f bodyDownloadHistoryItemsV1HistoryDownloadPostHistoryItemIds
{-# INLINE bodyDownloadHistoryItemsV1HistoryDownloadPostHistoryItemIdsL #-}



-- * BodyTextToSpeechV1TextToSpeechVoiceIdPost

-- | 'bodyTextToSpeechV1TextToSpeechVoiceIdPostText' Lens
bodyTextToSpeechV1TextToSpeechVoiceIdPostTextL :: Lens_' BodyTextToSpeechV1TextToSpeechVoiceIdPost (Text)
bodyTextToSpeechV1TextToSpeechVoiceIdPostTextL f BodyTextToSpeechV1TextToSpeechVoiceIdPost{..} = (\bodyTextToSpeechV1TextToSpeechVoiceIdPostText -> BodyTextToSpeechV1TextToSpeechVoiceIdPost { bodyTextToSpeechV1TextToSpeechVoiceIdPostText, ..} ) <$> f bodyTextToSpeechV1TextToSpeechVoiceIdPostText
{-# INLINE bodyTextToSpeechV1TextToSpeechVoiceIdPostTextL #-}

-- | 'bodyTextToSpeechV1TextToSpeechVoiceIdPostModelId' Lens
bodyTextToSpeechV1TextToSpeechVoiceIdPostModelIdL :: Lens_' BodyTextToSpeechV1TextToSpeechVoiceIdPost (Maybe Text)
bodyTextToSpeechV1TextToSpeechVoiceIdPostModelIdL f BodyTextToSpeechV1TextToSpeechVoiceIdPost{..} = (\bodyTextToSpeechV1TextToSpeechVoiceIdPostModelId -> BodyTextToSpeechV1TextToSpeechVoiceIdPost { bodyTextToSpeechV1TextToSpeechVoiceIdPostModelId, ..} ) <$> f bodyTextToSpeechV1TextToSpeechVoiceIdPostModelId
{-# INLINE bodyTextToSpeechV1TextToSpeechVoiceIdPostModelIdL #-}

-- | 'bodyTextToSpeechV1TextToSpeechVoiceIdPostVoiceSettings' Lens
bodyTextToSpeechV1TextToSpeechVoiceIdPostVoiceSettingsL :: Lens_' BodyTextToSpeechV1TextToSpeechVoiceIdPost (Maybe VoiceSettings)
bodyTextToSpeechV1TextToSpeechVoiceIdPostVoiceSettingsL f BodyTextToSpeechV1TextToSpeechVoiceIdPost{..} = (\bodyTextToSpeechV1TextToSpeechVoiceIdPostVoiceSettings -> BodyTextToSpeechV1TextToSpeechVoiceIdPost { bodyTextToSpeechV1TextToSpeechVoiceIdPostVoiceSettings, ..} ) <$> f bodyTextToSpeechV1TextToSpeechVoiceIdPostVoiceSettings
{-# INLINE bodyTextToSpeechV1TextToSpeechVoiceIdPostVoiceSettingsL #-}



-- * BodyTextToSpeechV1TextToSpeechVoiceIdStreamPost

-- | 'bodyTextToSpeechV1TextToSpeechVoiceIdStreamPostText' Lens
bodyTextToSpeechV1TextToSpeechVoiceIdStreamPostTextL :: Lens_' BodyTextToSpeechV1TextToSpeechVoiceIdStreamPost (Text)
bodyTextToSpeechV1TextToSpeechVoiceIdStreamPostTextL f BodyTextToSpeechV1TextToSpeechVoiceIdStreamPost{..} = (\bodyTextToSpeechV1TextToSpeechVoiceIdStreamPostText -> BodyTextToSpeechV1TextToSpeechVoiceIdStreamPost { bodyTextToSpeechV1TextToSpeechVoiceIdStreamPostText, ..} ) <$> f bodyTextToSpeechV1TextToSpeechVoiceIdStreamPostText
{-# INLINE bodyTextToSpeechV1TextToSpeechVoiceIdStreamPostTextL #-}

-- | 'bodyTextToSpeechV1TextToSpeechVoiceIdStreamPostModelId' Lens
bodyTextToSpeechV1TextToSpeechVoiceIdStreamPostModelIdL :: Lens_' BodyTextToSpeechV1TextToSpeechVoiceIdStreamPost (Maybe Text)
bodyTextToSpeechV1TextToSpeechVoiceIdStreamPostModelIdL f BodyTextToSpeechV1TextToSpeechVoiceIdStreamPost{..} = (\bodyTextToSpeechV1TextToSpeechVoiceIdStreamPostModelId -> BodyTextToSpeechV1TextToSpeechVoiceIdStreamPost { bodyTextToSpeechV1TextToSpeechVoiceIdStreamPostModelId, ..} ) <$> f bodyTextToSpeechV1TextToSpeechVoiceIdStreamPostModelId
{-# INLINE bodyTextToSpeechV1TextToSpeechVoiceIdStreamPostModelIdL #-}

-- | 'bodyTextToSpeechV1TextToSpeechVoiceIdStreamPostVoiceSettings' Lens
bodyTextToSpeechV1TextToSpeechVoiceIdStreamPostVoiceSettingsL :: Lens_' BodyTextToSpeechV1TextToSpeechVoiceIdStreamPost (Maybe VoiceSettings)
bodyTextToSpeechV1TextToSpeechVoiceIdStreamPostVoiceSettingsL f BodyTextToSpeechV1TextToSpeechVoiceIdStreamPost{..} = (\bodyTextToSpeechV1TextToSpeechVoiceIdStreamPostVoiceSettings -> BodyTextToSpeechV1TextToSpeechVoiceIdStreamPost { bodyTextToSpeechV1TextToSpeechVoiceIdStreamPostVoiceSettings, ..} ) <$> f bodyTextToSpeechV1TextToSpeechVoiceIdStreamPostVoiceSettings
{-# INLINE bodyTextToSpeechV1TextToSpeechVoiceIdStreamPostVoiceSettingsL #-}



-- * ExtendedSubscriptionResponseModel

-- | 'extendedSubscriptionResponseModelTier' Lens
extendedSubscriptionResponseModelTierL :: Lens_' ExtendedSubscriptionResponseModel (Text)
extendedSubscriptionResponseModelTierL f ExtendedSubscriptionResponseModel{..} = (\extendedSubscriptionResponseModelTier -> ExtendedSubscriptionResponseModel { extendedSubscriptionResponseModelTier, ..} ) <$> f extendedSubscriptionResponseModelTier
{-# INLINE extendedSubscriptionResponseModelTierL #-}

-- | 'extendedSubscriptionResponseModelCharacterCount' Lens
extendedSubscriptionResponseModelCharacterCountL :: Lens_' ExtendedSubscriptionResponseModel (Int)
extendedSubscriptionResponseModelCharacterCountL f ExtendedSubscriptionResponseModel{..} = (\extendedSubscriptionResponseModelCharacterCount -> ExtendedSubscriptionResponseModel { extendedSubscriptionResponseModelCharacterCount, ..} ) <$> f extendedSubscriptionResponseModelCharacterCount
{-# INLINE extendedSubscriptionResponseModelCharacterCountL #-}

-- | 'extendedSubscriptionResponseModelCharacterLimit' Lens
extendedSubscriptionResponseModelCharacterLimitL :: Lens_' ExtendedSubscriptionResponseModel (Int)
extendedSubscriptionResponseModelCharacterLimitL f ExtendedSubscriptionResponseModel{..} = (\extendedSubscriptionResponseModelCharacterLimit -> ExtendedSubscriptionResponseModel { extendedSubscriptionResponseModelCharacterLimit, ..} ) <$> f extendedSubscriptionResponseModelCharacterLimit
{-# INLINE extendedSubscriptionResponseModelCharacterLimitL #-}

-- | 'extendedSubscriptionResponseModelCanExtendCharacterLimit' Lens
extendedSubscriptionResponseModelCanExtendCharacterLimitL :: Lens_' ExtendedSubscriptionResponseModel (Bool)
extendedSubscriptionResponseModelCanExtendCharacterLimitL f ExtendedSubscriptionResponseModel{..} = (\extendedSubscriptionResponseModelCanExtendCharacterLimit -> ExtendedSubscriptionResponseModel { extendedSubscriptionResponseModelCanExtendCharacterLimit, ..} ) <$> f extendedSubscriptionResponseModelCanExtendCharacterLimit
{-# INLINE extendedSubscriptionResponseModelCanExtendCharacterLimitL #-}

-- | 'extendedSubscriptionResponseModelAllowedToExtendCharacterLimit' Lens
extendedSubscriptionResponseModelAllowedToExtendCharacterLimitL :: Lens_' ExtendedSubscriptionResponseModel (Bool)
extendedSubscriptionResponseModelAllowedToExtendCharacterLimitL f ExtendedSubscriptionResponseModel{..} = (\extendedSubscriptionResponseModelAllowedToExtendCharacterLimit -> ExtendedSubscriptionResponseModel { extendedSubscriptionResponseModelAllowedToExtendCharacterLimit, ..} ) <$> f extendedSubscriptionResponseModelAllowedToExtendCharacterLimit
{-# INLINE extendedSubscriptionResponseModelAllowedToExtendCharacterLimitL #-}

-- | 'extendedSubscriptionResponseModelNextCharacterCountResetUnix' Lens
extendedSubscriptionResponseModelNextCharacterCountResetUnixL :: Lens_' ExtendedSubscriptionResponseModel (Int)
extendedSubscriptionResponseModelNextCharacterCountResetUnixL f ExtendedSubscriptionResponseModel{..} = (\extendedSubscriptionResponseModelNextCharacterCountResetUnix -> ExtendedSubscriptionResponseModel { extendedSubscriptionResponseModelNextCharacterCountResetUnix, ..} ) <$> f extendedSubscriptionResponseModelNextCharacterCountResetUnix
{-# INLINE extendedSubscriptionResponseModelNextCharacterCountResetUnixL #-}

-- | 'extendedSubscriptionResponseModelVoiceLimit' Lens
extendedSubscriptionResponseModelVoiceLimitL :: Lens_' ExtendedSubscriptionResponseModel (Int)
extendedSubscriptionResponseModelVoiceLimitL f ExtendedSubscriptionResponseModel{..} = (\extendedSubscriptionResponseModelVoiceLimit -> ExtendedSubscriptionResponseModel { extendedSubscriptionResponseModelVoiceLimit, ..} ) <$> f extendedSubscriptionResponseModelVoiceLimit
{-# INLINE extendedSubscriptionResponseModelVoiceLimitL #-}

-- | 'extendedSubscriptionResponseModelProfessionalVoiceLimit' Lens
extendedSubscriptionResponseModelProfessionalVoiceLimitL :: Lens_' ExtendedSubscriptionResponseModel (Int)
extendedSubscriptionResponseModelProfessionalVoiceLimitL f ExtendedSubscriptionResponseModel{..} = (\extendedSubscriptionResponseModelProfessionalVoiceLimit -> ExtendedSubscriptionResponseModel { extendedSubscriptionResponseModelProfessionalVoiceLimit, ..} ) <$> f extendedSubscriptionResponseModelProfessionalVoiceLimit
{-# INLINE extendedSubscriptionResponseModelProfessionalVoiceLimitL #-}

-- | 'extendedSubscriptionResponseModelCanExtendVoiceLimit' Lens
extendedSubscriptionResponseModelCanExtendVoiceLimitL :: Lens_' ExtendedSubscriptionResponseModel (Bool)
extendedSubscriptionResponseModelCanExtendVoiceLimitL f ExtendedSubscriptionResponseModel{..} = (\extendedSubscriptionResponseModelCanExtendVoiceLimit -> ExtendedSubscriptionResponseModel { extendedSubscriptionResponseModelCanExtendVoiceLimit, ..} ) <$> f extendedSubscriptionResponseModelCanExtendVoiceLimit
{-# INLINE extendedSubscriptionResponseModelCanExtendVoiceLimitL #-}

-- | 'extendedSubscriptionResponseModelCanUseInstantVoiceCloning' Lens
extendedSubscriptionResponseModelCanUseInstantVoiceCloningL :: Lens_' ExtendedSubscriptionResponseModel (Bool)
extendedSubscriptionResponseModelCanUseInstantVoiceCloningL f ExtendedSubscriptionResponseModel{..} = (\extendedSubscriptionResponseModelCanUseInstantVoiceCloning -> ExtendedSubscriptionResponseModel { extendedSubscriptionResponseModelCanUseInstantVoiceCloning, ..} ) <$> f extendedSubscriptionResponseModelCanUseInstantVoiceCloning
{-# INLINE extendedSubscriptionResponseModelCanUseInstantVoiceCloningL #-}

-- | 'extendedSubscriptionResponseModelCanUseProfessionalVoiceCloning' Lens
extendedSubscriptionResponseModelCanUseProfessionalVoiceCloningL :: Lens_' ExtendedSubscriptionResponseModel (Bool)
extendedSubscriptionResponseModelCanUseProfessionalVoiceCloningL f ExtendedSubscriptionResponseModel{..} = (\extendedSubscriptionResponseModelCanUseProfessionalVoiceCloning -> ExtendedSubscriptionResponseModel { extendedSubscriptionResponseModelCanUseProfessionalVoiceCloning, ..} ) <$> f extendedSubscriptionResponseModelCanUseProfessionalVoiceCloning
{-# INLINE extendedSubscriptionResponseModelCanUseProfessionalVoiceCloningL #-}

-- | 'extendedSubscriptionResponseModelCurrency' Lens
extendedSubscriptionResponseModelCurrencyL :: Lens_' ExtendedSubscriptionResponseModel (E'Currency)
extendedSubscriptionResponseModelCurrencyL f ExtendedSubscriptionResponseModel{..} = (\extendedSubscriptionResponseModelCurrency -> ExtendedSubscriptionResponseModel { extendedSubscriptionResponseModelCurrency, ..} ) <$> f extendedSubscriptionResponseModelCurrency
{-# INLINE extendedSubscriptionResponseModelCurrencyL #-}

-- | 'extendedSubscriptionResponseModelStatus' Lens
extendedSubscriptionResponseModelStatusL :: Lens_' ExtendedSubscriptionResponseModel (E'Status)
extendedSubscriptionResponseModelStatusL f ExtendedSubscriptionResponseModel{..} = (\extendedSubscriptionResponseModelStatus -> ExtendedSubscriptionResponseModel { extendedSubscriptionResponseModelStatus, ..} ) <$> f extendedSubscriptionResponseModelStatus
{-# INLINE extendedSubscriptionResponseModelStatusL #-}

-- | 'extendedSubscriptionResponseModelNextInvoice' Lens
extendedSubscriptionResponseModelNextInvoiceL :: Lens_' ExtendedSubscriptionResponseModel (InvoiceResponseModel)
extendedSubscriptionResponseModelNextInvoiceL f ExtendedSubscriptionResponseModel{..} = (\extendedSubscriptionResponseModelNextInvoice -> ExtendedSubscriptionResponseModel { extendedSubscriptionResponseModelNextInvoice, ..} ) <$> f extendedSubscriptionResponseModelNextInvoice
{-# INLINE extendedSubscriptionResponseModelNextInvoiceL #-}

-- | 'extendedSubscriptionResponseModelHasOpenInvoices' Lens
extendedSubscriptionResponseModelHasOpenInvoicesL :: Lens_' ExtendedSubscriptionResponseModel (Bool)
extendedSubscriptionResponseModelHasOpenInvoicesL f ExtendedSubscriptionResponseModel{..} = (\extendedSubscriptionResponseModelHasOpenInvoices -> ExtendedSubscriptionResponseModel { extendedSubscriptionResponseModelHasOpenInvoices, ..} ) <$> f extendedSubscriptionResponseModelHasOpenInvoices
{-# INLINE extendedSubscriptionResponseModelHasOpenInvoicesL #-}



-- * FeedbackResponseModel

-- | 'feedbackResponseModelThumbsUp' Lens
feedbackResponseModelThumbsUpL :: Lens_' FeedbackResponseModel (Bool)
feedbackResponseModelThumbsUpL f FeedbackResponseModel{..} = (\feedbackResponseModelThumbsUp -> FeedbackResponseModel { feedbackResponseModelThumbsUp, ..} ) <$> f feedbackResponseModelThumbsUp
{-# INLINE feedbackResponseModelThumbsUpL #-}

-- | 'feedbackResponseModelFeedback' Lens
feedbackResponseModelFeedbackL :: Lens_' FeedbackResponseModel (Text)
feedbackResponseModelFeedbackL f FeedbackResponseModel{..} = (\feedbackResponseModelFeedback -> FeedbackResponseModel { feedbackResponseModelFeedback, ..} ) <$> f feedbackResponseModelFeedback
{-# INLINE feedbackResponseModelFeedbackL #-}

-- | 'feedbackResponseModelEmotions' Lens
feedbackResponseModelEmotionsL :: Lens_' FeedbackResponseModel (Bool)
feedbackResponseModelEmotionsL f FeedbackResponseModel{..} = (\feedbackResponseModelEmotions -> FeedbackResponseModel { feedbackResponseModelEmotions, ..} ) <$> f feedbackResponseModelEmotions
{-# INLINE feedbackResponseModelEmotionsL #-}

-- | 'feedbackResponseModelInaccurateClone' Lens
feedbackResponseModelInaccurateCloneL :: Lens_' FeedbackResponseModel (Bool)
feedbackResponseModelInaccurateCloneL f FeedbackResponseModel{..} = (\feedbackResponseModelInaccurateClone -> FeedbackResponseModel { feedbackResponseModelInaccurateClone, ..} ) <$> f feedbackResponseModelInaccurateClone
{-# INLINE feedbackResponseModelInaccurateCloneL #-}

-- | 'feedbackResponseModelGlitches' Lens
feedbackResponseModelGlitchesL :: Lens_' FeedbackResponseModel (Bool)
feedbackResponseModelGlitchesL f FeedbackResponseModel{..} = (\feedbackResponseModelGlitches -> FeedbackResponseModel { feedbackResponseModelGlitches, ..} ) <$> f feedbackResponseModelGlitches
{-# INLINE feedbackResponseModelGlitchesL #-}

-- | 'feedbackResponseModelAudioQuality' Lens
feedbackResponseModelAudioQualityL :: Lens_' FeedbackResponseModel (Bool)
feedbackResponseModelAudioQualityL f FeedbackResponseModel{..} = (\feedbackResponseModelAudioQuality -> FeedbackResponseModel { feedbackResponseModelAudioQuality, ..} ) <$> f feedbackResponseModelAudioQuality
{-# INLINE feedbackResponseModelAudioQualityL #-}

-- | 'feedbackResponseModelOther' Lens
feedbackResponseModelOtherL :: Lens_' FeedbackResponseModel (Bool)
feedbackResponseModelOtherL f FeedbackResponseModel{..} = (\feedbackResponseModelOther -> FeedbackResponseModel { feedbackResponseModelOther, ..} ) <$> f feedbackResponseModelOther
{-# INLINE feedbackResponseModelOtherL #-}

-- | 'feedbackResponseModelReviewStatus' Lens
feedbackResponseModelReviewStatusL :: Lens_' FeedbackResponseModel (Maybe Text)
feedbackResponseModelReviewStatusL f FeedbackResponseModel{..} = (\feedbackResponseModelReviewStatus -> FeedbackResponseModel { feedbackResponseModelReviewStatus, ..} ) <$> f feedbackResponseModelReviewStatus
{-# INLINE feedbackResponseModelReviewStatusL #-}



-- * FineTuningResponseModel

-- | 'fineTuningResponseModelModelId' Lens
fineTuningResponseModelModelIdL :: Lens_' FineTuningResponseModel (Text)
fineTuningResponseModelModelIdL f FineTuningResponseModel{..} = (\fineTuningResponseModelModelId -> FineTuningResponseModel { fineTuningResponseModelModelId, ..} ) <$> f fineTuningResponseModelModelId
{-# INLINE fineTuningResponseModelModelIdL #-}

-- | 'fineTuningResponseModelLanguage' Lens
fineTuningResponseModelLanguageL :: Lens_' FineTuningResponseModel (Text)
fineTuningResponseModelLanguageL f FineTuningResponseModel{..} = (\fineTuningResponseModelLanguage -> FineTuningResponseModel { fineTuningResponseModelLanguage, ..} ) <$> f fineTuningResponseModelLanguage
{-# INLINE fineTuningResponseModelLanguageL #-}

-- | 'fineTuningResponseModelIsAllowedToFineTune' Lens
fineTuningResponseModelIsAllowedToFineTuneL :: Lens_' FineTuningResponseModel (Bool)
fineTuningResponseModelIsAllowedToFineTuneL f FineTuningResponseModel{..} = (\fineTuningResponseModelIsAllowedToFineTune -> FineTuningResponseModel { fineTuningResponseModelIsAllowedToFineTune, ..} ) <$> f fineTuningResponseModelIsAllowedToFineTune
{-# INLINE fineTuningResponseModelIsAllowedToFineTuneL #-}

-- | 'fineTuningResponseModelFineTuningRequested' Lens
fineTuningResponseModelFineTuningRequestedL :: Lens_' FineTuningResponseModel (Bool)
fineTuningResponseModelFineTuningRequestedL f FineTuningResponseModel{..} = (\fineTuningResponseModelFineTuningRequested -> FineTuningResponseModel { fineTuningResponseModelFineTuningRequested, ..} ) <$> f fineTuningResponseModelFineTuningRequested
{-# INLINE fineTuningResponseModelFineTuningRequestedL #-}

-- | 'fineTuningResponseModelFinetuningState' Lens
fineTuningResponseModelFinetuningStateL :: Lens_' FineTuningResponseModel (E'FinetuningState)
fineTuningResponseModelFinetuningStateL f FineTuningResponseModel{..} = (\fineTuningResponseModelFinetuningState -> FineTuningResponseModel { fineTuningResponseModelFinetuningState, ..} ) <$> f fineTuningResponseModelFinetuningState
{-# INLINE fineTuningResponseModelFinetuningStateL #-}

-- | 'fineTuningResponseModelVerificationAttempts' Lens
fineTuningResponseModelVerificationAttemptsL :: Lens_' FineTuningResponseModel ([VerificationAttemptResponseModel])
fineTuningResponseModelVerificationAttemptsL f FineTuningResponseModel{..} = (\fineTuningResponseModelVerificationAttempts -> FineTuningResponseModel { fineTuningResponseModelVerificationAttempts, ..} ) <$> f fineTuningResponseModelVerificationAttempts
{-# INLINE fineTuningResponseModelVerificationAttemptsL #-}

-- | 'fineTuningResponseModelVerificationFailures' Lens
fineTuningResponseModelVerificationFailuresL :: Lens_' FineTuningResponseModel ([Text])
fineTuningResponseModelVerificationFailuresL f FineTuningResponseModel{..} = (\fineTuningResponseModelVerificationFailures -> FineTuningResponseModel { fineTuningResponseModelVerificationFailures, ..} ) <$> f fineTuningResponseModelVerificationFailures
{-# INLINE fineTuningResponseModelVerificationFailuresL #-}

-- | 'fineTuningResponseModelVerificationAttemptsCount' Lens
fineTuningResponseModelVerificationAttemptsCountL :: Lens_' FineTuningResponseModel (Int)
fineTuningResponseModelVerificationAttemptsCountL f FineTuningResponseModel{..} = (\fineTuningResponseModelVerificationAttemptsCount -> FineTuningResponseModel { fineTuningResponseModelVerificationAttemptsCount, ..} ) <$> f fineTuningResponseModelVerificationAttemptsCount
{-# INLINE fineTuningResponseModelVerificationAttemptsCountL #-}

-- | 'fineTuningResponseModelSliceIds' Lens
fineTuningResponseModelSliceIdsL :: Lens_' FineTuningResponseModel ([Text])
fineTuningResponseModelSliceIdsL f FineTuningResponseModel{..} = (\fineTuningResponseModelSliceIds -> FineTuningResponseModel { fineTuningResponseModelSliceIds, ..} ) <$> f fineTuningResponseModelSliceIds
{-# INLINE fineTuningResponseModelSliceIdsL #-}



-- * GetHistoryResponseModel

-- | 'getHistoryResponseModelHistory' Lens
getHistoryResponseModelHistoryL :: Lens_' GetHistoryResponseModel ([HistoryItemResponseModel])
getHistoryResponseModelHistoryL f GetHistoryResponseModel{..} = (\getHistoryResponseModelHistory -> GetHistoryResponseModel { getHistoryResponseModelHistory, ..} ) <$> f getHistoryResponseModelHistory
{-# INLINE getHistoryResponseModelHistoryL #-}

-- | 'getHistoryResponseModelLastHistoryItemId' Lens
getHistoryResponseModelLastHistoryItemIdL :: Lens_' GetHistoryResponseModel (Text)
getHistoryResponseModelLastHistoryItemIdL f GetHistoryResponseModel{..} = (\getHistoryResponseModelLastHistoryItemId -> GetHistoryResponseModel { getHistoryResponseModelLastHistoryItemId, ..} ) <$> f getHistoryResponseModelLastHistoryItemId
{-# INLINE getHistoryResponseModelLastHistoryItemIdL #-}

-- | 'getHistoryResponseModelHasMore' Lens
getHistoryResponseModelHasMoreL :: Lens_' GetHistoryResponseModel (Bool)
getHistoryResponseModelHasMoreL f GetHistoryResponseModel{..} = (\getHistoryResponseModelHasMore -> GetHistoryResponseModel { getHistoryResponseModelHasMore, ..} ) <$> f getHistoryResponseModelHasMore
{-# INLINE getHistoryResponseModelHasMoreL #-}



-- * GetVoicesResponseModel

-- | 'getVoicesResponseModelVoices' Lens
getVoicesResponseModelVoicesL :: Lens_' GetVoicesResponseModel ([VoiceResponseModel])
getVoicesResponseModelVoicesL f GetVoicesResponseModel{..} = (\getVoicesResponseModelVoices -> GetVoicesResponseModel { getVoicesResponseModelVoices, ..} ) <$> f getVoicesResponseModelVoices
{-# INLINE getVoicesResponseModelVoicesL #-}



-- * HTTPValidationError

-- | 'hTTPValidationErrorDetail' Lens
hTTPValidationErrorDetailL :: Lens_' HTTPValidationError (Maybe [ValidationError])
hTTPValidationErrorDetailL f HTTPValidationError{..} = (\hTTPValidationErrorDetail -> HTTPValidationError { hTTPValidationErrorDetail, ..} ) <$> f hTTPValidationErrorDetail
{-# INLINE hTTPValidationErrorDetailL #-}



-- * HistoryItemResponseModel

-- | 'historyItemResponseModelHistoryItemId' Lens
historyItemResponseModelHistoryItemIdL :: Lens_' HistoryItemResponseModel (Text)
historyItemResponseModelHistoryItemIdL f HistoryItemResponseModel{..} = (\historyItemResponseModelHistoryItemId -> HistoryItemResponseModel { historyItemResponseModelHistoryItemId, ..} ) <$> f historyItemResponseModelHistoryItemId
{-# INLINE historyItemResponseModelHistoryItemIdL #-}

-- | 'historyItemResponseModelRequestId' Lens
historyItemResponseModelRequestIdL :: Lens_' HistoryItemResponseModel (Text)
historyItemResponseModelRequestIdL f HistoryItemResponseModel{..} = (\historyItemResponseModelRequestId -> HistoryItemResponseModel { historyItemResponseModelRequestId, ..} ) <$> f historyItemResponseModelRequestId
{-# INLINE historyItemResponseModelRequestIdL #-}

-- | 'historyItemResponseModelVoiceId' Lens
historyItemResponseModelVoiceIdL :: Lens_' HistoryItemResponseModel (Text)
historyItemResponseModelVoiceIdL f HistoryItemResponseModel{..} = (\historyItemResponseModelVoiceId -> HistoryItemResponseModel { historyItemResponseModelVoiceId, ..} ) <$> f historyItemResponseModelVoiceId
{-# INLINE historyItemResponseModelVoiceIdL #-}

-- | 'historyItemResponseModelVoiceName' Lens
historyItemResponseModelVoiceNameL :: Lens_' HistoryItemResponseModel (Text)
historyItemResponseModelVoiceNameL f HistoryItemResponseModel{..} = (\historyItemResponseModelVoiceName -> HistoryItemResponseModel { historyItemResponseModelVoiceName, ..} ) <$> f historyItemResponseModelVoiceName
{-# INLINE historyItemResponseModelVoiceNameL #-}

-- | 'historyItemResponseModelText' Lens
historyItemResponseModelTextL :: Lens_' HistoryItemResponseModel (Text)
historyItemResponseModelTextL f HistoryItemResponseModel{..} = (\historyItemResponseModelText -> HistoryItemResponseModel { historyItemResponseModelText, ..} ) <$> f historyItemResponseModelText
{-# INLINE historyItemResponseModelTextL #-}

-- | 'historyItemResponseModelDateUnix' Lens
historyItemResponseModelDateUnixL :: Lens_' HistoryItemResponseModel (Int)
historyItemResponseModelDateUnixL f HistoryItemResponseModel{..} = (\historyItemResponseModelDateUnix -> HistoryItemResponseModel { historyItemResponseModelDateUnix, ..} ) <$> f historyItemResponseModelDateUnix
{-# INLINE historyItemResponseModelDateUnixL #-}

-- | 'historyItemResponseModelCharacterCountChangeFrom' Lens
historyItemResponseModelCharacterCountChangeFromL :: Lens_' HistoryItemResponseModel (Int)
historyItemResponseModelCharacterCountChangeFromL f HistoryItemResponseModel{..} = (\historyItemResponseModelCharacterCountChangeFrom -> HistoryItemResponseModel { historyItemResponseModelCharacterCountChangeFrom, ..} ) <$> f historyItemResponseModelCharacterCountChangeFrom
{-# INLINE historyItemResponseModelCharacterCountChangeFromL #-}

-- | 'historyItemResponseModelCharacterCountChangeTo' Lens
historyItemResponseModelCharacterCountChangeToL :: Lens_' HistoryItemResponseModel (Int)
historyItemResponseModelCharacterCountChangeToL f HistoryItemResponseModel{..} = (\historyItemResponseModelCharacterCountChangeTo -> HistoryItemResponseModel { historyItemResponseModelCharacterCountChangeTo, ..} ) <$> f historyItemResponseModelCharacterCountChangeTo
{-# INLINE historyItemResponseModelCharacterCountChangeToL #-}

-- | 'historyItemResponseModelContentType' Lens
historyItemResponseModelContentTypeL :: Lens_' HistoryItemResponseModel (Text)
historyItemResponseModelContentTypeL f HistoryItemResponseModel{..} = (\historyItemResponseModelContentType -> HistoryItemResponseModel { historyItemResponseModelContentType, ..} ) <$> f historyItemResponseModelContentType
{-# INLINE historyItemResponseModelContentTypeL #-}

-- | 'historyItemResponseModelState' Lens
historyItemResponseModelStateL :: Lens_' HistoryItemResponseModel (E'State)
historyItemResponseModelStateL f HistoryItemResponseModel{..} = (\historyItemResponseModelState -> HistoryItemResponseModel { historyItemResponseModelState, ..} ) <$> f historyItemResponseModelState
{-# INLINE historyItemResponseModelStateL #-}

-- | 'historyItemResponseModelSettings' Lens
historyItemResponseModelSettingsL :: Lens_' HistoryItemResponseModel (A.Value)
historyItemResponseModelSettingsL f HistoryItemResponseModel{..} = (\historyItemResponseModelSettings -> HistoryItemResponseModel { historyItemResponseModelSettings, ..} ) <$> f historyItemResponseModelSettings
{-# INLINE historyItemResponseModelSettingsL #-}

-- | 'historyItemResponseModelFeedback' Lens
historyItemResponseModelFeedbackL :: Lens_' HistoryItemResponseModel (FeedbackResponseModel)
historyItemResponseModelFeedbackL f HistoryItemResponseModel{..} = (\historyItemResponseModelFeedback -> HistoryItemResponseModel { historyItemResponseModelFeedback, ..} ) <$> f historyItemResponseModelFeedback
{-# INLINE historyItemResponseModelFeedbackL #-}



-- * InvoiceResponseModel

-- | 'invoiceResponseModelAmountDueCents' Lens
invoiceResponseModelAmountDueCentsL :: Lens_' InvoiceResponseModel (Int)
invoiceResponseModelAmountDueCentsL f InvoiceResponseModel{..} = (\invoiceResponseModelAmountDueCents -> InvoiceResponseModel { invoiceResponseModelAmountDueCents, ..} ) <$> f invoiceResponseModelAmountDueCents
{-# INLINE invoiceResponseModelAmountDueCentsL #-}

-- | 'invoiceResponseModelNextPaymentAttemptUnix' Lens
invoiceResponseModelNextPaymentAttemptUnixL :: Lens_' InvoiceResponseModel (Int)
invoiceResponseModelNextPaymentAttemptUnixL f InvoiceResponseModel{..} = (\invoiceResponseModelNextPaymentAttemptUnix -> InvoiceResponseModel { invoiceResponseModelNextPaymentAttemptUnix, ..} ) <$> f invoiceResponseModelNextPaymentAttemptUnix
{-# INLINE invoiceResponseModelNextPaymentAttemptUnixL #-}



-- * LanguageResponseModel

-- | 'languageResponseModelLanguageId' Lens
languageResponseModelLanguageIdL :: Lens_' LanguageResponseModel (Text)
languageResponseModelLanguageIdL f LanguageResponseModel{..} = (\languageResponseModelLanguageId -> LanguageResponseModel { languageResponseModelLanguageId, ..} ) <$> f languageResponseModelLanguageId
{-# INLINE languageResponseModelLanguageIdL #-}

-- | 'languageResponseModelName' Lens
languageResponseModelNameL :: Lens_' LanguageResponseModel (Text)
languageResponseModelNameL f LanguageResponseModel{..} = (\languageResponseModelName -> LanguageResponseModel { languageResponseModelName, ..} ) <$> f languageResponseModelName
{-# INLINE languageResponseModelNameL #-}



-- * LocationInner



-- * ModelResponseModel

-- | 'modelResponseModelModelId' Lens
modelResponseModelModelIdL :: Lens_' ModelResponseModel (Text)
modelResponseModelModelIdL f ModelResponseModel{..} = (\modelResponseModelModelId -> ModelResponseModel { modelResponseModelModelId, ..} ) <$> f modelResponseModelModelId
{-# INLINE modelResponseModelModelIdL #-}

-- | 'modelResponseModelName' Lens
modelResponseModelNameL :: Lens_' ModelResponseModel (Text)
modelResponseModelNameL f ModelResponseModel{..} = (\modelResponseModelName -> ModelResponseModel { modelResponseModelName, ..} ) <$> f modelResponseModelName
{-# INLINE modelResponseModelNameL #-}

-- | 'modelResponseModelCanBeFinetuned' Lens
modelResponseModelCanBeFinetunedL :: Lens_' ModelResponseModel (Bool)
modelResponseModelCanBeFinetunedL f ModelResponseModel{..} = (\modelResponseModelCanBeFinetuned -> ModelResponseModel { modelResponseModelCanBeFinetuned, ..} ) <$> f modelResponseModelCanBeFinetuned
{-# INLINE modelResponseModelCanBeFinetunedL #-}

-- | 'modelResponseModelCanDoTextToSpeech' Lens
modelResponseModelCanDoTextToSpeechL :: Lens_' ModelResponseModel (Bool)
modelResponseModelCanDoTextToSpeechL f ModelResponseModel{..} = (\modelResponseModelCanDoTextToSpeech -> ModelResponseModel { modelResponseModelCanDoTextToSpeech, ..} ) <$> f modelResponseModelCanDoTextToSpeech
{-# INLINE modelResponseModelCanDoTextToSpeechL #-}

-- | 'modelResponseModelCanDoVoiceConversion' Lens
modelResponseModelCanDoVoiceConversionL :: Lens_' ModelResponseModel (Bool)
modelResponseModelCanDoVoiceConversionL f ModelResponseModel{..} = (\modelResponseModelCanDoVoiceConversion -> ModelResponseModel { modelResponseModelCanDoVoiceConversion, ..} ) <$> f modelResponseModelCanDoVoiceConversion
{-# INLINE modelResponseModelCanDoVoiceConversionL #-}

-- | 'modelResponseModelTokenCostFactor' Lens
modelResponseModelTokenCostFactorL :: Lens_' ModelResponseModel (Double)
modelResponseModelTokenCostFactorL f ModelResponseModel{..} = (\modelResponseModelTokenCostFactor -> ModelResponseModel { modelResponseModelTokenCostFactor, ..} ) <$> f modelResponseModelTokenCostFactor
{-# INLINE modelResponseModelTokenCostFactorL #-}

-- | 'modelResponseModelDescription' Lens
modelResponseModelDescriptionL :: Lens_' ModelResponseModel (Text)
modelResponseModelDescriptionL f ModelResponseModel{..} = (\modelResponseModelDescription -> ModelResponseModel { modelResponseModelDescription, ..} ) <$> f modelResponseModelDescription
{-# INLINE modelResponseModelDescriptionL #-}

-- | 'modelResponseModelLanguages' Lens
modelResponseModelLanguagesL :: Lens_' ModelResponseModel ([LanguageResponseModel])
modelResponseModelLanguagesL f ModelResponseModel{..} = (\modelResponseModelLanguages -> ModelResponseModel { modelResponseModelLanguages, ..} ) <$> f modelResponseModelLanguages
{-# INLINE modelResponseModelLanguagesL #-}



-- * RecordingResponseModel

-- | 'recordingResponseModelRecordingId' Lens
recordingResponseModelRecordingIdL :: Lens_' RecordingResponseModel (Text)
recordingResponseModelRecordingIdL f RecordingResponseModel{..} = (\recordingResponseModelRecordingId -> RecordingResponseModel { recordingResponseModelRecordingId, ..} ) <$> f recordingResponseModelRecordingId
{-# INLINE recordingResponseModelRecordingIdL #-}

-- | 'recordingResponseModelMimeType' Lens
recordingResponseModelMimeTypeL :: Lens_' RecordingResponseModel (Text)
recordingResponseModelMimeTypeL f RecordingResponseModel{..} = (\recordingResponseModelMimeType -> RecordingResponseModel { recordingResponseModelMimeType, ..} ) <$> f recordingResponseModelMimeType
{-# INLINE recordingResponseModelMimeTypeL #-}

-- | 'recordingResponseModelSizeBytes' Lens
recordingResponseModelSizeBytesL :: Lens_' RecordingResponseModel (Int)
recordingResponseModelSizeBytesL f RecordingResponseModel{..} = (\recordingResponseModelSizeBytes -> RecordingResponseModel { recordingResponseModelSizeBytes, ..} ) <$> f recordingResponseModelSizeBytes
{-# INLINE recordingResponseModelSizeBytesL #-}

-- | 'recordingResponseModelUploadDateUnix' Lens
recordingResponseModelUploadDateUnixL :: Lens_' RecordingResponseModel (Int)
recordingResponseModelUploadDateUnixL f RecordingResponseModel{..} = (\recordingResponseModelUploadDateUnix -> RecordingResponseModel { recordingResponseModelUploadDateUnix, ..} ) <$> f recordingResponseModelUploadDateUnix
{-# INLINE recordingResponseModelUploadDateUnixL #-}

-- | 'recordingResponseModelTranscription' Lens
recordingResponseModelTranscriptionL :: Lens_' RecordingResponseModel (Text)
recordingResponseModelTranscriptionL f RecordingResponseModel{..} = (\recordingResponseModelTranscription -> RecordingResponseModel { recordingResponseModelTranscription, ..} ) <$> f recordingResponseModelTranscription
{-# INLINE recordingResponseModelTranscriptionL #-}



-- * SampleResponseModel

-- | 'sampleResponseModelSampleId' Lens
sampleResponseModelSampleIdL :: Lens_' SampleResponseModel (Text)
sampleResponseModelSampleIdL f SampleResponseModel{..} = (\sampleResponseModelSampleId -> SampleResponseModel { sampleResponseModelSampleId, ..} ) <$> f sampleResponseModelSampleId
{-# INLINE sampleResponseModelSampleIdL #-}

-- | 'sampleResponseModelFileName' Lens
sampleResponseModelFileNameL :: Lens_' SampleResponseModel (Text)
sampleResponseModelFileNameL f SampleResponseModel{..} = (\sampleResponseModelFileName -> SampleResponseModel { sampleResponseModelFileName, ..} ) <$> f sampleResponseModelFileName
{-# INLINE sampleResponseModelFileNameL #-}

-- | 'sampleResponseModelMimeType' Lens
sampleResponseModelMimeTypeL :: Lens_' SampleResponseModel (Text)
sampleResponseModelMimeTypeL f SampleResponseModel{..} = (\sampleResponseModelMimeType -> SampleResponseModel { sampleResponseModelMimeType, ..} ) <$> f sampleResponseModelMimeType
{-# INLINE sampleResponseModelMimeTypeL #-}

-- | 'sampleResponseModelSizeBytes' Lens
sampleResponseModelSizeBytesL :: Lens_' SampleResponseModel (Int)
sampleResponseModelSizeBytesL f SampleResponseModel{..} = (\sampleResponseModelSizeBytes -> SampleResponseModel { sampleResponseModelSizeBytes, ..} ) <$> f sampleResponseModelSizeBytes
{-# INLINE sampleResponseModelSizeBytesL #-}

-- | 'sampleResponseModelHash' Lens
sampleResponseModelHashL :: Lens_' SampleResponseModel (Text)
sampleResponseModelHashL f SampleResponseModel{..} = (\sampleResponseModelHash -> SampleResponseModel { sampleResponseModelHash, ..} ) <$> f sampleResponseModelHash
{-# INLINE sampleResponseModelHashL #-}



-- * Settings

-- | 'settingsStability' Lens
settingsStabilityL :: Lens_' Settings (Double)
settingsStabilityL f Settings{..} = (\settingsStability -> Settings { settingsStability, ..} ) <$> f settingsStability
{-# INLINE settingsStabilityL #-}

-- | 'settingsSimilarityBoost' Lens
settingsSimilarityBoostL :: Lens_' Settings (Double)
settingsSimilarityBoostL f Settings{..} = (\settingsSimilarityBoost -> Settings { settingsSimilarityBoost, ..} ) <$> f settingsSimilarityBoost
{-# INLINE settingsSimilarityBoostL #-}



-- * SubscriptionResponseModel

-- | 'subscriptionResponseModelTier' Lens
subscriptionResponseModelTierL :: Lens_' SubscriptionResponseModel (Text)
subscriptionResponseModelTierL f SubscriptionResponseModel{..} = (\subscriptionResponseModelTier -> SubscriptionResponseModel { subscriptionResponseModelTier, ..} ) <$> f subscriptionResponseModelTier
{-# INLINE subscriptionResponseModelTierL #-}

-- | 'subscriptionResponseModelCharacterCount' Lens
subscriptionResponseModelCharacterCountL :: Lens_' SubscriptionResponseModel (Int)
subscriptionResponseModelCharacterCountL f SubscriptionResponseModel{..} = (\subscriptionResponseModelCharacterCount -> SubscriptionResponseModel { subscriptionResponseModelCharacterCount, ..} ) <$> f subscriptionResponseModelCharacterCount
{-# INLINE subscriptionResponseModelCharacterCountL #-}

-- | 'subscriptionResponseModelCharacterLimit' Lens
subscriptionResponseModelCharacterLimitL :: Lens_' SubscriptionResponseModel (Int)
subscriptionResponseModelCharacterLimitL f SubscriptionResponseModel{..} = (\subscriptionResponseModelCharacterLimit -> SubscriptionResponseModel { subscriptionResponseModelCharacterLimit, ..} ) <$> f subscriptionResponseModelCharacterLimit
{-# INLINE subscriptionResponseModelCharacterLimitL #-}

-- | 'subscriptionResponseModelCanExtendCharacterLimit' Lens
subscriptionResponseModelCanExtendCharacterLimitL :: Lens_' SubscriptionResponseModel (Bool)
subscriptionResponseModelCanExtendCharacterLimitL f SubscriptionResponseModel{..} = (\subscriptionResponseModelCanExtendCharacterLimit -> SubscriptionResponseModel { subscriptionResponseModelCanExtendCharacterLimit, ..} ) <$> f subscriptionResponseModelCanExtendCharacterLimit
{-# INLINE subscriptionResponseModelCanExtendCharacterLimitL #-}

-- | 'subscriptionResponseModelAllowedToExtendCharacterLimit' Lens
subscriptionResponseModelAllowedToExtendCharacterLimitL :: Lens_' SubscriptionResponseModel (Bool)
subscriptionResponseModelAllowedToExtendCharacterLimitL f SubscriptionResponseModel{..} = (\subscriptionResponseModelAllowedToExtendCharacterLimit -> SubscriptionResponseModel { subscriptionResponseModelAllowedToExtendCharacterLimit, ..} ) <$> f subscriptionResponseModelAllowedToExtendCharacterLimit
{-# INLINE subscriptionResponseModelAllowedToExtendCharacterLimitL #-}

-- | 'subscriptionResponseModelNextCharacterCountResetUnix' Lens
subscriptionResponseModelNextCharacterCountResetUnixL :: Lens_' SubscriptionResponseModel (Int)
subscriptionResponseModelNextCharacterCountResetUnixL f SubscriptionResponseModel{..} = (\subscriptionResponseModelNextCharacterCountResetUnix -> SubscriptionResponseModel { subscriptionResponseModelNextCharacterCountResetUnix, ..} ) <$> f subscriptionResponseModelNextCharacterCountResetUnix
{-# INLINE subscriptionResponseModelNextCharacterCountResetUnixL #-}

-- | 'subscriptionResponseModelVoiceLimit' Lens
subscriptionResponseModelVoiceLimitL :: Lens_' SubscriptionResponseModel (Int)
subscriptionResponseModelVoiceLimitL f SubscriptionResponseModel{..} = (\subscriptionResponseModelVoiceLimit -> SubscriptionResponseModel { subscriptionResponseModelVoiceLimit, ..} ) <$> f subscriptionResponseModelVoiceLimit
{-# INLINE subscriptionResponseModelVoiceLimitL #-}

-- | 'subscriptionResponseModelProfessionalVoiceLimit' Lens
subscriptionResponseModelProfessionalVoiceLimitL :: Lens_' SubscriptionResponseModel (Int)
subscriptionResponseModelProfessionalVoiceLimitL f SubscriptionResponseModel{..} = (\subscriptionResponseModelProfessionalVoiceLimit -> SubscriptionResponseModel { subscriptionResponseModelProfessionalVoiceLimit, ..} ) <$> f subscriptionResponseModelProfessionalVoiceLimit
{-# INLINE subscriptionResponseModelProfessionalVoiceLimitL #-}

-- | 'subscriptionResponseModelCanExtendVoiceLimit' Lens
subscriptionResponseModelCanExtendVoiceLimitL :: Lens_' SubscriptionResponseModel (Bool)
subscriptionResponseModelCanExtendVoiceLimitL f SubscriptionResponseModel{..} = (\subscriptionResponseModelCanExtendVoiceLimit -> SubscriptionResponseModel { subscriptionResponseModelCanExtendVoiceLimit, ..} ) <$> f subscriptionResponseModelCanExtendVoiceLimit
{-# INLINE subscriptionResponseModelCanExtendVoiceLimitL #-}

-- | 'subscriptionResponseModelCanUseInstantVoiceCloning' Lens
subscriptionResponseModelCanUseInstantVoiceCloningL :: Lens_' SubscriptionResponseModel (Bool)
subscriptionResponseModelCanUseInstantVoiceCloningL f SubscriptionResponseModel{..} = (\subscriptionResponseModelCanUseInstantVoiceCloning -> SubscriptionResponseModel { subscriptionResponseModelCanUseInstantVoiceCloning, ..} ) <$> f subscriptionResponseModelCanUseInstantVoiceCloning
{-# INLINE subscriptionResponseModelCanUseInstantVoiceCloningL #-}

-- | 'subscriptionResponseModelCanUseProfessionalVoiceCloning' Lens
subscriptionResponseModelCanUseProfessionalVoiceCloningL :: Lens_' SubscriptionResponseModel (Bool)
subscriptionResponseModelCanUseProfessionalVoiceCloningL f SubscriptionResponseModel{..} = (\subscriptionResponseModelCanUseProfessionalVoiceCloning -> SubscriptionResponseModel { subscriptionResponseModelCanUseProfessionalVoiceCloning, ..} ) <$> f subscriptionResponseModelCanUseProfessionalVoiceCloning
{-# INLINE subscriptionResponseModelCanUseProfessionalVoiceCloningL #-}

-- | 'subscriptionResponseModelCurrency' Lens
subscriptionResponseModelCurrencyL :: Lens_' SubscriptionResponseModel (E'Currency)
subscriptionResponseModelCurrencyL f SubscriptionResponseModel{..} = (\subscriptionResponseModelCurrency -> SubscriptionResponseModel { subscriptionResponseModelCurrency, ..} ) <$> f subscriptionResponseModelCurrency
{-# INLINE subscriptionResponseModelCurrencyL #-}

-- | 'subscriptionResponseModelStatus' Lens
subscriptionResponseModelStatusL :: Lens_' SubscriptionResponseModel (E'Status)
subscriptionResponseModelStatusL f SubscriptionResponseModel{..} = (\subscriptionResponseModelStatus -> SubscriptionResponseModel { subscriptionResponseModelStatus, ..} ) <$> f subscriptionResponseModelStatus
{-# INLINE subscriptionResponseModelStatusL #-}



-- * UserResponseModel

-- | 'userResponseModelSubscription' Lens
userResponseModelSubscriptionL :: Lens_' UserResponseModel (SubscriptionResponseModel)
userResponseModelSubscriptionL f UserResponseModel{..} = (\userResponseModelSubscription -> UserResponseModel { userResponseModelSubscription, ..} ) <$> f userResponseModelSubscription
{-# INLINE userResponseModelSubscriptionL #-}

-- | 'userResponseModelIsNewUser' Lens
userResponseModelIsNewUserL :: Lens_' UserResponseModel (Bool)
userResponseModelIsNewUserL f UserResponseModel{..} = (\userResponseModelIsNewUser -> UserResponseModel { userResponseModelIsNewUser, ..} ) <$> f userResponseModelIsNewUser
{-# INLINE userResponseModelIsNewUserL #-}

-- | 'userResponseModelXiApiKey' Lens
userResponseModelXiApiKeyL :: Lens_' UserResponseModel (Text)
userResponseModelXiApiKeyL f UserResponseModel{..} = (\userResponseModelXiApiKey -> UserResponseModel { userResponseModelXiApiKey, ..} ) <$> f userResponseModelXiApiKey
{-# INLINE userResponseModelXiApiKeyL #-}

-- | 'userResponseModelCanUseDelayedPaymentMethods' Lens
userResponseModelCanUseDelayedPaymentMethodsL :: Lens_' UserResponseModel (Bool)
userResponseModelCanUseDelayedPaymentMethodsL f UserResponseModel{..} = (\userResponseModelCanUseDelayedPaymentMethods -> UserResponseModel { userResponseModelCanUseDelayedPaymentMethods, ..} ) <$> f userResponseModelCanUseDelayedPaymentMethods
{-# INLINE userResponseModelCanUseDelayedPaymentMethodsL #-}



-- * ValidationError

-- | 'validationErrorLoc' Lens
validationErrorLocL :: Lens_' ValidationError ([LocationInner])
validationErrorLocL f ValidationError{..} = (\validationErrorLoc -> ValidationError { validationErrorLoc, ..} ) <$> f validationErrorLoc
{-# INLINE validationErrorLocL #-}

-- | 'validationErrorMsg' Lens
validationErrorMsgL :: Lens_' ValidationError (Text)
validationErrorMsgL f ValidationError{..} = (\validationErrorMsg -> ValidationError { validationErrorMsg, ..} ) <$> f validationErrorMsg
{-# INLINE validationErrorMsgL #-}

-- | 'validationErrorType' Lens
validationErrorTypeL :: Lens_' ValidationError (Text)
validationErrorTypeL f ValidationError{..} = (\validationErrorType -> ValidationError { validationErrorType, ..} ) <$> f validationErrorType
{-# INLINE validationErrorTypeL #-}



-- * VerificationAttemptResponseModel

-- | 'verificationAttemptResponseModelText' Lens
verificationAttemptResponseModelTextL :: Lens_' VerificationAttemptResponseModel (Text)
verificationAttemptResponseModelTextL f VerificationAttemptResponseModel{..} = (\verificationAttemptResponseModelText -> VerificationAttemptResponseModel { verificationAttemptResponseModelText, ..} ) <$> f verificationAttemptResponseModelText
{-# INLINE verificationAttemptResponseModelTextL #-}

-- | 'verificationAttemptResponseModelDateUnix' Lens
verificationAttemptResponseModelDateUnixL :: Lens_' VerificationAttemptResponseModel (Int)
verificationAttemptResponseModelDateUnixL f VerificationAttemptResponseModel{..} = (\verificationAttemptResponseModelDateUnix -> VerificationAttemptResponseModel { verificationAttemptResponseModelDateUnix, ..} ) <$> f verificationAttemptResponseModelDateUnix
{-# INLINE verificationAttemptResponseModelDateUnixL #-}

-- | 'verificationAttemptResponseModelAccepted' Lens
verificationAttemptResponseModelAcceptedL :: Lens_' VerificationAttemptResponseModel (Bool)
verificationAttemptResponseModelAcceptedL f VerificationAttemptResponseModel{..} = (\verificationAttemptResponseModelAccepted -> VerificationAttemptResponseModel { verificationAttemptResponseModelAccepted, ..} ) <$> f verificationAttemptResponseModelAccepted
{-# INLINE verificationAttemptResponseModelAcceptedL #-}

-- | 'verificationAttemptResponseModelSimilarity' Lens
verificationAttemptResponseModelSimilarityL :: Lens_' VerificationAttemptResponseModel (Double)
verificationAttemptResponseModelSimilarityL f VerificationAttemptResponseModel{..} = (\verificationAttemptResponseModelSimilarity -> VerificationAttemptResponseModel { verificationAttemptResponseModelSimilarity, ..} ) <$> f verificationAttemptResponseModelSimilarity
{-# INLINE verificationAttemptResponseModelSimilarityL #-}

-- | 'verificationAttemptResponseModelLevenshteinDistance' Lens
verificationAttemptResponseModelLevenshteinDistanceL :: Lens_' VerificationAttemptResponseModel (Double)
verificationAttemptResponseModelLevenshteinDistanceL f VerificationAttemptResponseModel{..} = (\verificationAttemptResponseModelLevenshteinDistance -> VerificationAttemptResponseModel { verificationAttemptResponseModelLevenshteinDistance, ..} ) <$> f verificationAttemptResponseModelLevenshteinDistance
{-# INLINE verificationAttemptResponseModelLevenshteinDistanceL #-}

-- | 'verificationAttemptResponseModelRecording' Lens
verificationAttemptResponseModelRecordingL :: Lens_' VerificationAttemptResponseModel (RecordingResponseModel)
verificationAttemptResponseModelRecordingL f VerificationAttemptResponseModel{..} = (\verificationAttemptResponseModelRecording -> VerificationAttemptResponseModel { verificationAttemptResponseModelRecording, ..} ) <$> f verificationAttemptResponseModelRecording
{-# INLINE verificationAttemptResponseModelRecordingL #-}



-- * VoiceResponseModel

-- | 'voiceResponseModelVoiceId' Lens
voiceResponseModelVoiceIdL :: Lens_' VoiceResponseModel (Text)
voiceResponseModelVoiceIdL f VoiceResponseModel{..} = (\voiceResponseModelVoiceId -> VoiceResponseModel { voiceResponseModelVoiceId, ..} ) <$> f voiceResponseModelVoiceId
{-# INLINE voiceResponseModelVoiceIdL #-}

-- | 'voiceResponseModelName' Lens
voiceResponseModelNameL :: Lens_' VoiceResponseModel (Text)
voiceResponseModelNameL f VoiceResponseModel{..} = (\voiceResponseModelName -> VoiceResponseModel { voiceResponseModelName, ..} ) <$> f voiceResponseModelName
{-# INLINE voiceResponseModelNameL #-}

-- | 'voiceResponseModelSamples' Lens
voiceResponseModelSamplesL :: Lens_' VoiceResponseModel ([SampleResponseModel])
voiceResponseModelSamplesL f VoiceResponseModel{..} = (\voiceResponseModelSamples -> VoiceResponseModel { voiceResponseModelSamples, ..} ) <$> f voiceResponseModelSamples
{-# INLINE voiceResponseModelSamplesL #-}

-- | 'voiceResponseModelCategory' Lens
voiceResponseModelCategoryL :: Lens_' VoiceResponseModel (Text)
voiceResponseModelCategoryL f VoiceResponseModel{..} = (\voiceResponseModelCategory -> VoiceResponseModel { voiceResponseModelCategory, ..} ) <$> f voiceResponseModelCategory
{-# INLINE voiceResponseModelCategoryL #-}

-- | 'voiceResponseModelFineTuning' Lens
voiceResponseModelFineTuningL :: Lens_' VoiceResponseModel (FineTuningResponseModel)
voiceResponseModelFineTuningL f VoiceResponseModel{..} = (\voiceResponseModelFineTuning -> VoiceResponseModel { voiceResponseModelFineTuning, ..} ) <$> f voiceResponseModelFineTuning
{-# INLINE voiceResponseModelFineTuningL #-}

-- | 'voiceResponseModelLabels' Lens
voiceResponseModelLabelsL :: Lens_' VoiceResponseModel ((Map.Map String Text))
voiceResponseModelLabelsL f VoiceResponseModel{..} = (\voiceResponseModelLabels -> VoiceResponseModel { voiceResponseModelLabels, ..} ) <$> f voiceResponseModelLabels
{-# INLINE voiceResponseModelLabelsL #-}

-- | 'voiceResponseModelDescription' Lens
voiceResponseModelDescriptionL :: Lens_' VoiceResponseModel (Text)
voiceResponseModelDescriptionL f VoiceResponseModel{..} = (\voiceResponseModelDescription -> VoiceResponseModel { voiceResponseModelDescription, ..} ) <$> f voiceResponseModelDescription
{-# INLINE voiceResponseModelDescriptionL #-}

-- | 'voiceResponseModelPreviewUrl' Lens
voiceResponseModelPreviewUrlL :: Lens_' VoiceResponseModel (Text)
voiceResponseModelPreviewUrlL f VoiceResponseModel{..} = (\voiceResponseModelPreviewUrl -> VoiceResponseModel { voiceResponseModelPreviewUrl, ..} ) <$> f voiceResponseModelPreviewUrl
{-# INLINE voiceResponseModelPreviewUrlL #-}

-- | 'voiceResponseModelAvailableForTiers' Lens
voiceResponseModelAvailableForTiersL :: Lens_' VoiceResponseModel ([Text])
voiceResponseModelAvailableForTiersL f VoiceResponseModel{..} = (\voiceResponseModelAvailableForTiers -> VoiceResponseModel { voiceResponseModelAvailableForTiers, ..} ) <$> f voiceResponseModelAvailableForTiers
{-# INLINE voiceResponseModelAvailableForTiersL #-}

-- | 'voiceResponseModelSettings' Lens
voiceResponseModelSettingsL :: Lens_' VoiceResponseModel (VoiceSettingsResponseModel)
voiceResponseModelSettingsL f VoiceResponseModel{..} = (\voiceResponseModelSettings -> VoiceResponseModel { voiceResponseModelSettings, ..} ) <$> f voiceResponseModelSettings
{-# INLINE voiceResponseModelSettingsL #-}

-- | 'voiceResponseModelSharing' Lens
voiceResponseModelSharingL :: Lens_' VoiceResponseModel (VoiceSharingResponseModel)
voiceResponseModelSharingL f VoiceResponseModel{..} = (\voiceResponseModelSharing -> VoiceResponseModel { voiceResponseModelSharing, ..} ) <$> f voiceResponseModelSharing
{-# INLINE voiceResponseModelSharingL #-}



-- * VoiceSettings

-- | 'voiceSettingsStability' Lens
voiceSettingsStabilityL :: Lens_' VoiceSettings (Double)
voiceSettingsStabilityL f VoiceSettings{..} = (\voiceSettingsStability -> VoiceSettings { voiceSettingsStability, ..} ) <$> f voiceSettingsStability
{-# INLINE voiceSettingsStabilityL #-}

-- | 'voiceSettingsSimilarityBoost' Lens
voiceSettingsSimilarityBoostL :: Lens_' VoiceSettings (Double)
voiceSettingsSimilarityBoostL f VoiceSettings{..} = (\voiceSettingsSimilarityBoost -> VoiceSettings { voiceSettingsSimilarityBoost, ..} ) <$> f voiceSettingsSimilarityBoost
{-# INLINE voiceSettingsSimilarityBoostL #-}



-- * VoiceSettingsResponseModel

-- | 'voiceSettingsResponseModelStability' Lens
voiceSettingsResponseModelStabilityL :: Lens_' VoiceSettingsResponseModel (Double)
voiceSettingsResponseModelStabilityL f VoiceSettingsResponseModel{..} = (\voiceSettingsResponseModelStability -> VoiceSettingsResponseModel { voiceSettingsResponseModelStability, ..} ) <$> f voiceSettingsResponseModelStability
{-# INLINE voiceSettingsResponseModelStabilityL #-}

-- | 'voiceSettingsResponseModelSimilarityBoost' Lens
voiceSettingsResponseModelSimilarityBoostL :: Lens_' VoiceSettingsResponseModel (Double)
voiceSettingsResponseModelSimilarityBoostL f VoiceSettingsResponseModel{..} = (\voiceSettingsResponseModelSimilarityBoost -> VoiceSettingsResponseModel { voiceSettingsResponseModelSimilarityBoost, ..} ) <$> f voiceSettingsResponseModelSimilarityBoost
{-# INLINE voiceSettingsResponseModelSimilarityBoostL #-}



-- * VoiceSharingResponseModel

-- | 'voiceSharingResponseModelStatus' Lens
voiceSharingResponseModelStatusL :: Lens_' VoiceSharingResponseModel (Text)
voiceSharingResponseModelStatusL f VoiceSharingResponseModel{..} = (\voiceSharingResponseModelStatus -> VoiceSharingResponseModel { voiceSharingResponseModelStatus, ..} ) <$> f voiceSharingResponseModelStatus
{-# INLINE voiceSharingResponseModelStatusL #-}

-- | 'voiceSharingResponseModelHistoryItemSampleId' Lens
voiceSharingResponseModelHistoryItemSampleIdL :: Lens_' VoiceSharingResponseModel (Text)
voiceSharingResponseModelHistoryItemSampleIdL f VoiceSharingResponseModel{..} = (\voiceSharingResponseModelHistoryItemSampleId -> VoiceSharingResponseModel { voiceSharingResponseModelHistoryItemSampleId, ..} ) <$> f voiceSharingResponseModelHistoryItemSampleId
{-# INLINE voiceSharingResponseModelHistoryItemSampleIdL #-}

-- | 'voiceSharingResponseModelOriginalVoiceId' Lens
voiceSharingResponseModelOriginalVoiceIdL :: Lens_' VoiceSharingResponseModel (Text)
voiceSharingResponseModelOriginalVoiceIdL f VoiceSharingResponseModel{..} = (\voiceSharingResponseModelOriginalVoiceId -> VoiceSharingResponseModel { voiceSharingResponseModelOriginalVoiceId, ..} ) <$> f voiceSharingResponseModelOriginalVoiceId
{-# INLINE voiceSharingResponseModelOriginalVoiceIdL #-}

-- | 'voiceSharingResponseModelPublicOwnerId' Lens
voiceSharingResponseModelPublicOwnerIdL :: Lens_' VoiceSharingResponseModel (Text)
voiceSharingResponseModelPublicOwnerIdL f VoiceSharingResponseModel{..} = (\voiceSharingResponseModelPublicOwnerId -> VoiceSharingResponseModel { voiceSharingResponseModelPublicOwnerId, ..} ) <$> f voiceSharingResponseModelPublicOwnerId
{-# INLINE voiceSharingResponseModelPublicOwnerIdL #-}

-- | 'voiceSharingResponseModelLikedByCount' Lens
voiceSharingResponseModelLikedByCountL :: Lens_' VoiceSharingResponseModel (Int)
voiceSharingResponseModelLikedByCountL f VoiceSharingResponseModel{..} = (\voiceSharingResponseModelLikedByCount -> VoiceSharingResponseModel { voiceSharingResponseModelLikedByCount, ..} ) <$> f voiceSharingResponseModelLikedByCount
{-# INLINE voiceSharingResponseModelLikedByCountL #-}

-- | 'voiceSharingResponseModelClonedByCount' Lens
voiceSharingResponseModelClonedByCountL :: Lens_' VoiceSharingResponseModel (Int)
voiceSharingResponseModelClonedByCountL f VoiceSharingResponseModel{..} = (\voiceSharingResponseModelClonedByCount -> VoiceSharingResponseModel { voiceSharingResponseModelClonedByCount, ..} ) <$> f voiceSharingResponseModelClonedByCount
{-# INLINE voiceSharingResponseModelClonedByCountL #-}


